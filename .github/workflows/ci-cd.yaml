name: CI-CD
on: 
  push: 
    branches:
      - main
jobs:
  kubernetes: 
    runs-on: ubuntu-latest    
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: docker-login
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: docker login -p ${DOCKER_PASSWORD} -u ${DOCKER_USERNAME}
      - name: build-hasher
        run: |
          docker build -t miguelsan/hasher:test src/hasher/
          docker push     miguelsan/hasher:test
      - name: build-rng
        run: |
          docker build -t miguelsan/rng:test src/rng/
          docker push     miguelsan/rng:test
      - name: build-webui
        run: |
          docker build -t miguelsan/webui:test src/webui/
          docker push     miguelsan/webui:test
      - name: build-worker
        run: |
          docker build -t miguelsan/worker:test src/worker/
          docker push     miguelsan/worker:test
      - name: minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb
          sudo apt-get install ./minikube_latest_amd64.deb
      - name: init
        run: minikube start --driver=docker
      - name: deploy
        run: |
          kubectl apply -f src/hasher/deploy-test.yaml
          kubectl apply -f src/hasher/svc.yaml
          kubectl apply -f src/redis/sts.yaml
          kubectl apply -f src/redis/svc.yaml
          kubectl apply -f src/rng/ds-test.yaml
          kubectl apply -f src/rng/svc.yaml
          kubectl apply -f src/webui/deploy-test.yaml
          kubectl apply -f src/webui/svc.yaml
          kubectl apply -f src/worker/deploy-test.yaml
      - name: test-redis
        run: |
          while true
          do sleep 10
          kubectl logs sts/redis 2>& 1 | grep Ready.to.accept.connections && break
          done
      - name: deploy-worker
        run: |
          kubectl apply -f src/worker/deploy.yaml
      - name: test-webui
        run: |
          while true
          do sleep 10
          kubectl logs deploy/webui 2>& 1 | grep WEBUI.running && break
          done
      - name: test-worker
        run: |
          while true
          do sleep 10
          kubectl get deploy worker
          kubectl logs deploy/worker 2>& 1 | grep "units of work done, updating hash counter" && break
          done
      - name: push-hasher
        run: |
          docker tag miguelsan/hasher:test  miguelsan/hasher:latest
          docker push                            miguelsan/hasher:latest
      - name: push-rng
        run: |
          docker tag miguelsan/rng:test     miguelsan/rng:latest
          docker push                            miguelsan/rng:latest
      - name: push-webui
        run: |
          docker tag miguelsan/webui:test   miguelsan/webui:latest
          docker push                            miguelsan/webui:latest
      - name: push-worker
        run: |
          docker tag miguelsan/worker:test  miguelsan/worker:latest
          docker push                            miguelsan/worker:latest
      - name: wget-oc
        run: |
          wget https://downloads-openshift-console.apps.openshift.sebastian-colomar.es/amd64/linux/oc.tar
          tar xf oc.tar
          sudo cp oc /usr/local/bin
          oc version
      - name: oc-login
        env:
          OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
          OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
        run: oc login --server="${OPENSHIFT_SERVER}" --token="${OPENSHIFT_TOKEN}"
      - name: deploy
        env:
          OPENSHIFT_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE }}
        run: |
          oc project "${OPENSHIFT_NAMESPACE}"
          oc apply -f src/hasher/deploy.yaml
          oc apply -f src/hasher/svc.yaml
          oc apply -f src/redis/sts.yaml
          oc apply -f src/redis/svc.yaml
          oc apply -f src/rng/ds.yaml
          oc apply -f src/rng/svc.yaml
          oc apply -f src/webui/deploy.yaml
          oc apply -f src/webui/svc.yaml
          oc apply -f src/worker/deploy-test.yaml
      - name: test-redis
        run: |
          while true
          do sleep 10
          kubectl logs sts/redis 2>& 1 | grep Ready.to.accept.connections && break
          done
      - name: deploy-worker
        run: |
          kubectl apply -f src/worker/deploy.yaml
      - name: test-webui
        run: |
          while true
          do sleep 10
          kubectl logs deploy/webui 2>& 1 | grep WEBUI.running && break
          done
      - name: test-worker
        run: |
          while true
          do sleep 10
          kubectl get deploy worker
          kubectl logs deploy/worker 2>& 1 | grep "units of work done, updating hash counter" && break
          done
          
